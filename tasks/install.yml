---
- name: "Install Nessus Agent"
  ansible.builtin.dnf:
    name: NessusAgent
    state: present

- name: "Start and enable Nessus Agent service"
  ansible.builtin.systemd:
    name: "nessusagent"
    state: started
    enabled: true

- name: "Check if Nessus Agent is already linked"
  ansible.builtin.shell: "/opt/nessus_agent/sbin/nessuscli agent status; true"
  register: nessus_agent_link_status
  ignore_errors: true
  changed_when: false

- name: "Extract linked hostname"
  ansible.builtin.set_fact:
    nessus_linked_hostname: "{{ (nessus_agent_link_status.stdout | regex_search('Linked to:\\s+([\\w\\.-]+):\\d+', '\\1')) | first }}"
  when: "'Linked to' in nessus_agent_link_status.stdout"

- name: "List linked hostname"
  ansible.builtin.debug:
    msg: "Nessus Agent is linked to: {{ nessus_linked_hostname }}"
  when: "'Linked to' in nessus_agent_link_status.stdout"

- name: "List nessus_agent_nessus_server"
  ansible.builtin.debug:
    msg: "Nessus Server: {{ nessus_agent_nessus_server }}"

- name: "Unlink Nessus Agent"
  ansible.builtin.command: "/opt/nessus_agent/sbin/nessuscli agent unlink"
  when: "(nessus_linked_hostname is defined and nessus_linked_hostname != nessus_agent_nessus_server) or nessus_agent_force_link | default(false)"
  notify: "Restart Nessus Agent service"

- name: "Link Nessus Agent to Nessus server"
  ansible.builtin.command: "/opt/nessus_agent/sbin/nessuscli agent link --key={{ nessus_agent_activation_code }} --groups={{ nessus_agent_groups }} --host={{ nessus_agent_nessus_server }} --port={{ nessus_agent_port }}"
  changed_when: true
  when: "'Linked to' not in nessus_agent_link_status.stdout or (nessus_linked_hostname != nessus_agent_nessus_server and nessus_agent_force_link | default(false))"
  notify: "Restart Nessus Agent service"
